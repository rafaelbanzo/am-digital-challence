buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'am-digital-challenge'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("com.google.maps:google-maps-services:0.1.20")
    compile("com.jayway.jsonpath:json-path:2.2.0")
    testCompile("com.jayway.jsonpath:json-path")
    testCompile("org.springframework.boot:spring-boot-starter-test")

    //jBehave
    compile 'com.google.guava:guava:18.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.0'
    testCompile 'org.jbehave:jbehave-core:3.9.5'
    testCompile 'org.jbehave.site:jbehave-site-resources:3.1.1:@zip'

    //Rest Assured
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.google.code.gson:gson:2.6.2'
    testCompile 'com.jayway.restassured:rest-assured:2.9.0'

    testCompile 'org.apache.httpcomponents:httpclient:4.5.3'
}




//jBehave
sourceSets.test.resources.srcDir 'src/test/java'

test {
    doFirst {
        copy {
            from(zipTree(jarPath("jbehave-core"))) {
                include "style/*"
            }
            into("build/jbehave/view")

        }
        copy {
            from(zipTree(jarPath("jbehave-site-resources"))) {
                include "js/**/*"
                include "style/**/*"
                include "images/*"
            }
            into("build/jbehave/view")
        }
    }
}

def jarPath(String jarName) {
    configurations.testCompile.find({ it.name.startsWith(jarName) }).absolutePath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
//end jBehave